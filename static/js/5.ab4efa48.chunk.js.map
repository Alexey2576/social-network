{"version":3,"sources":["Components/Content/Profile/profile.module.scss","assets/ava.png","hoc/withRouter.tsx","Components/Content/Profile/Posts/Post/post.module.scss","Components/Content/Profile/ProfileInfo/Status/Status.tsx","Components/Commons/ErrorBoundary/ErrorBoundary.tsx","../node_modules/react-final-form/dist/react-final-form.es.js","Components/Commons/Utils/Validators/validators.ts","Components/Commons/FieldForm/FieldForm.tsx","Components/Content/Profile/ProfileInfo/ProfileUserInfo.tsx","Components/Content/Profile/ProfileForm/ProfileForm.tsx","Components/Content/Profile/Posts/Post/Post.tsx","Components/Content/Profile/Posts/Posts.tsx","Components/Content/Profile/Profile.tsx","redux/profile/profileSelectors.ts","Components/Content/Profile/ContainerProfile.tsx"],"names":["module","exports","withRouter","Component","props","userID","useParams","navigate","useNavigate","userIdFromURL","Status","React","memo","status","authId","updateStatusCallback","useState","editMode","setEditMode","newStatus","setNewStatus","useEffect","autoFocus","type","value","onBlur","onChange","e","currentTarget","Number","onDoubleClick","onClick","ErrorBoundary","state","error","errorInfo","this","setState","style","whiteSpace","toString","componentStack","children","_excluded$3","renderComponent","lazyProps","name","render","component","rest","_objectWithoutPropertiesLoose","Object","assign","undefined","Error","useWhenValueChanges","callback","isEqual","a","b","previous","React__default","useRef","current","shallowEqual","keysA","keys","keysB","length","bHasOwnProperty","prototype","hasOwnProperty","bind","idx","key","isSyntheticEvent","candidate","stopPropagation","ReactFinalFormContext","useLatest","ref","addLazyState","dest","forEach","defineProperty","get","enumerable","addLazyFormState","_excluded$2","versions","version$1","all$1","formSubscriptionItems","reduce","result","ReactFinalForm","_ref","debug","_ref$decorators","decorators","destroyOnUnregister","alternateFormApi","form","initialValues","initialValuesEqual","keepDirtyOnReinitialize","mutators","onSubmit","_ref$subscription","subscription","validate","validateOnBlur","config","init","useConstant","f","createForm","pauseValidation","_React$useState","initialState","subscribe","stateRef","isValidationPaused","resumeValidation","unsubscriptions","s","concat","map","decorator","reverse","unsubscribe","setConfig","renderProps","_extends","reset","eventOrValues","handleSubmit","event","preventDefault","submit","Provider","__versions","useForm","componentName","isReactNative","window","navigator","product","useConstantCallback","_len","arguments","args","Array","_key","apply","all","fieldSubscriptionItems","defaultFormat","defaultParse","defaultIsEqual","useField","_config","afterSubmit","allowNull","data","defaultValue","_config$format","format","formatOnBlur","initialValue","multiple","_config$parse","parse","_config$subscription","validateFields","_value","configRef","register","silent","registerField","beforeSubmit","_configRef$current","_configRef$current$fo","getFieldState","formatted","change","getValidator","firstRender","meta","addLazyFieldMetaState","input","checked","isArray","indexOf","blur","fieldState","target","currentValue","valueProp","nativeEvent","text","_detypedEvent$target","index","slice","options","option","selected","push","getSelectedValues","getValue","onFocus","focus","_excluded","Field","field","composeValidators","validators","validator","FieldForm","placeholder","label","submitError","touched","ProfileUserInfo","profileUserInfo","updatePhotoCallback","updateProfileDataCallback","statusProps","fullName","userId","photos","contacts","onSubmitHandler","profileData","resultCode","FORM_ERROR","messages","className","profile__info","profile__info_img","src","large","ava","alt","files","profile__info_text","github","contactsKeys","ProfileData","aboutMe","lookingForAJob","lookingForAJobDescription","contactKey","Contact","ProfileDataForm","color","ProfileForm","addPostCallback","profile__addPost","post","messages__addPost_btn","Post","post_message","message","post_like","like","Posts","posts","profile__postTitle","profile__posts","p","id","Profile","profileUserInfoProps","profile","getUserInfo","profilePage","getPosts","getAuthId","authState","getStatus","ContainerProfile","loadProfileData","getProfileUserInfo","getProfileStatus","componentDidMount","componentDidUpdate","prevProps","prevId","prevLargePhoto","largePhoto","addPost","updateProfileStatus","file","uploadProfilePhoto","updateProfileData","PureComponent","compose","connect","withAuthRedirect"],"mappings":"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","file":"static/js/5.ab4efa48.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"profile_profile__2gMKd\",\"profile__postTitle\":\"profile_profile__postTitle__H2b-o\",\"profile__info\":\"profile_profile__info__1_Kve\",\"profile__info_img\":\"profile_profile__info_img__3MAes\",\"profile__info_text\":\"profile_profile__info_text__jjPkj\",\"profile__posts\":\"profile_profile__posts__15hxo\",\"profile__addPost\":\"profile_profile__addPost__3MWLG\",\"profile__addPost_input\":\"profile_profile__addPost_input__1wZ-Y\",\"profile__addPost_btn\":\"profile_profile__addPost_btn__1Nt5B\"};","export default __webpack_public_path__ + \"static/media/ava.c429bb80.png\";","import {useNavigate, useParams} from \"react-router-dom\";\r\nimport React, {ComponentType} from \"react\";\r\n\r\nexport function withRouter<T>(Component: ComponentType<T>) {\r\n   return (props: any) => {\r\n      let {userID} = useParams<string>();\r\n      let navigate = useNavigate()\r\n      return <Component {...props} userIdFromURL={userID} navigate={navigate}/>\r\n   };\r\n}\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"post_post__2yxHn\",\"post_message\":\"post_post_message__2IZXH\",\"post_like\":\"post_post_like__8OBoH\"};","import React, {ChangeEvent, useEffect, useState} from 'react';\r\n\r\nexport const Status: React.FC<StatusType> = React.memo((props) => {\r\n   const { status, authId, userIdFromURL, updateStatusCallback, } = props\r\n\r\n   const [editMode, setEditMode] = useState(false)\r\n   const [newStatus, setNewStatus] = useState<string>(\"\")\r\n\r\n   useEffect(() => {\r\n      if (status)\r\n         setNewStatus(status)\r\n      else setNewStatus(\"\")\r\n   }, [status])\r\n\r\n   const onDoubleClickHandler = () => {\r\n      if (authId === Number(userIdFromURL))\r\n         setEditMode(true)\r\n   }\r\n   const onBlurHandler = () => {\r\n      updateStatusCallback(newStatus)\r\n      setEditMode(false)\r\n   }\r\n   const onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => setNewStatus(e.currentTarget.value)\r\n   const onClickHandler = () => setEditMode(true)\r\n\r\n   return (\r\n      <>{\r\n         editMode\r\n            ? <input autoFocus\r\n                   type=\"text\"\r\n                   value={newStatus}\r\n                   onBlur={onBlurHandler}\r\n                   onChange={onChangeHandler}\r\n               />\r\n            : (\r\n               !status && authId === Number(userIdFromURL)\r\n                  ? <button onClick={onClickHandler}>+</button>\r\n                  : <span onDoubleClick={onDoubleClickHandler}>{newStatus}</span>\r\n            )\r\n      }\r\n      </>\r\n   )\r\n})\r\n\r\nexport type StatusType = {\r\n   status: string\r\n   authId: number | null\r\n   userIdFromURL?: string | null\r\n   updateStatusCallback(status: string): void\r\n}","import React, {ErrorInfo} from \"react\";\r\n\r\ntype ErrorBoundaryState = { error: Error | null, errorInfo: ErrorInfo | null };\r\nexport class ErrorBoundary extends React.Component< any, ErrorBoundaryState > {\r\n   constructor(props: any) {\r\n      super(props);\r\n      this.state = { error: null, errorInfo: null };\r\n   }\r\n\r\n   componentDidCatch(error: Error, errorInfo: ErrorInfo) {\r\n      // Catch errors in any components below and re-render with error message\r\n      this.setState({\r\n         error: error,\r\n         errorInfo: errorInfo\r\n      })\r\n      // You can also log error messages to an error reporting service here\r\n   }\r\n\r\n   render() {\r\n      if (this.state.errorInfo) {\r\n         // Error path\r\n         return (\r\n            <div>\r\n               <h2>Something went wrong.</h2>\r\n               <details style={{ whiteSpace: 'pre-wrap' }}>\r\n                  {this.state.error && this.state.error.toString()}\r\n                  <br />\r\n                  {this.state.errorInfo.componentStack}\r\n               </details>\r\n            </div>\r\n         );\r\n      }\r\n      // Normally, just render children\r\n      return this.props.children;\r\n   }\r\n}","import _extends from '@babel/runtime/helpers/esm/extends';\nimport _objectWithoutPropertiesLoose from '@babel/runtime/helpers/esm/objectWithoutPropertiesLoose';\nimport * as React from 'react';\nimport React__default from 'react';\nimport { formSubscriptionItems, createForm, version as version$1, fieldSubscriptionItems } from 'final-form';\n\nvar _excluded$3 = [\"render\", \"children\", \"component\"];\n// shared logic between components that use either render prop,\n// children render function, or component prop\nfunction renderComponent(props, lazyProps, name) {\n  var render = props.render,\n      children = props.children,\n      component = props.component,\n      rest = _objectWithoutPropertiesLoose(props, _excluded$3);\n\n  if (component) {\n    return /*#__PURE__*/React.createElement(component, Object.assign(lazyProps, rest, {\n      children: children,\n      render: render\n    }));\n  }\n\n  if (render) {\n    return render(children === undefined ? Object.assign(lazyProps, rest) : // inject children back in\n    Object.assign(lazyProps, rest, {\n      children: children\n    }));\n  }\n\n  if (typeof children !== \"function\") {\n    throw new Error(\"Must specify either a render prop, a render function as children, or a component prop to \" + name);\n  }\n\n  return children(Object.assign(lazyProps, rest));\n}\n\nfunction useWhenValueChanges(value, callback, isEqual) {\n  if (isEqual === void 0) {\n    isEqual = function isEqual(a, b) {\n      return a === b;\n    };\n  }\n\n  var previous = React__default.useRef(value);\n  React__default.useEffect(function () {\n    if (!isEqual(value, previous.current)) {\n      callback();\n      previous.current = value;\n    }\n  });\n}\n\n/**\n * A simple hook to create a constant value that lives for\n * the lifetime of the component.\n *\n * Plagiarized from https://github.com/Andarist/use-constant\n *\n * Do NOT reuse this code unless you know what you're doing.\n * Use Andarist's hook; it's more fault tolerant to things like\n * falsy values.\n *\n * @param {Function} init - A function to generate the value\n */\n\nfunction useConstant(init) {\n  var ref = React__default.useRef();\n\n  if (!ref.current) {\n    ref.current = init();\n  }\n\n  return ref.current;\n}\n\nvar shallowEqual = function shallowEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n\n  if (typeof a !== \"object\" || !a || typeof b !== \"object\" || !b) {\n    return false;\n  }\n\n  var keysA = Object.keys(a);\n  var keysB = Object.keys(b);\n\n  if (keysA.length !== keysB.length) {\n    return false;\n  }\n\n  var bHasOwnProperty = Object.prototype.hasOwnProperty.bind(b);\n\n  for (var idx = 0; idx < keysA.length; idx++) {\n    var key = keysA[idx];\n\n    if (!bHasOwnProperty(key) || a[key] !== b[key]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\nvar isSyntheticEvent = function isSyntheticEvent(candidate) {\n  return !!(candidate && typeof candidate.stopPropagation === \"function\");\n};\n\nvar ReactFinalFormContext = /*#__PURE__*/React.createContext();\n\nfunction useLatest(value) {\n  var ref = React__default.useRef(value);\n  React__default.useEffect(function () {\n    ref.current = value;\n  });\n  return ref;\n}\n\nvar version = \"6.5.8\";\n\nvar addLazyState = function addLazyState(dest, state, keys) {\n  keys.forEach(function (key) {\n    Object.defineProperty(dest, key, {\n      get: function get() {\n        return state[key];\n      },\n      enumerable: true\n    });\n  });\n};\n\nvar addLazyFormState = function addLazyFormState(dest, state) {\n  return addLazyState(dest, state, [\"active\", \"dirty\", \"dirtyFields\", \"dirtySinceLastSubmit\", \"dirtyFieldsSinceLastSubmit\", \"error\", \"errors\", \"hasSubmitErrors\", \"hasValidationErrors\", \"initialValues\", \"invalid\", \"modified\", \"modifiedSinceLastSubmit\", \"pristine\", \"submitError\", \"submitErrors\", \"submitFailed\", \"submitSucceeded\", \"submitting\", \"touched\", \"valid\", \"validating\", \"values\", \"visited\"]);\n};\nvar addLazyFieldMetaState = function addLazyFieldMetaState(dest, state) {\n  return addLazyState(dest, state, [\"active\", \"data\", \"dirty\", \"dirtySinceLastSubmit\", \"error\", \"initial\", \"invalid\", \"length\", \"modified\", \"modifiedSinceLastSubmit\", \"pristine\", \"submitError\", \"submitFailed\", \"submitSucceeded\", \"submitting\", \"touched\", \"valid\", \"validating\", \"visited\"]);\n};\n\nvar _excluded$2 = [\"debug\", \"decorators\", \"destroyOnUnregister\", \"form\", \"initialValues\", \"initialValuesEqual\", \"keepDirtyOnReinitialize\", \"mutators\", \"onSubmit\", \"subscription\", \"validate\", \"validateOnBlur\"];\nvar versions = {\n  \"final-form\": version$1,\n  \"react-final-form\": version\n};\nvar all$1 = formSubscriptionItems.reduce(function (result, key) {\n  result[key] = true;\n  return result;\n}, {});\n\nfunction ReactFinalForm(_ref) {\n  var debug = _ref.debug,\n      _ref$decorators = _ref.decorators,\n      decorators = _ref$decorators === void 0 ? [] : _ref$decorators,\n      destroyOnUnregister = _ref.destroyOnUnregister,\n      alternateFormApi = _ref.form,\n      initialValues = _ref.initialValues,\n      initialValuesEqual = _ref.initialValuesEqual,\n      keepDirtyOnReinitialize = _ref.keepDirtyOnReinitialize,\n      mutators = _ref.mutators,\n      onSubmit = _ref.onSubmit,\n      _ref$subscription = _ref.subscription,\n      subscription = _ref$subscription === void 0 ? all$1 : _ref$subscription,\n      validate = _ref.validate,\n      validateOnBlur = _ref.validateOnBlur,\n      rest = _objectWithoutPropertiesLoose(_ref, _excluded$2);\n\n  var config = {\n    debug: debug,\n    destroyOnUnregister: destroyOnUnregister,\n    initialValues: initialValues,\n    keepDirtyOnReinitialize: keepDirtyOnReinitialize,\n    mutators: mutators,\n    onSubmit: onSubmit,\n    validate: validate,\n    validateOnBlur: validateOnBlur\n  };\n  var form = useConstant(function () {\n    var f = alternateFormApi || createForm(config); // pause validation until children register all fields on first render (unpaused in useEffect() below)\n\n    f.pauseValidation();\n    return f;\n  }); // synchronously register and unregister to query form state for our subscription on first render\n\n  var _React$useState = React.useState(function () {\n    var initialState = {};\n    form.subscribe(function (state) {\n      initialState = state;\n    }, subscription)();\n    return initialState;\n  }),\n      state = _React$useState[0],\n      setState = _React$useState[1]; // save a copy of state that can break through the closure\n  // on the shallowEqual() line below.\n\n\n  var stateRef = useLatest(state);\n  React.useEffect(function () {\n    // We have rendered, so all fields are now registered, so we can unpause validation\n    form.isValidationPaused() && form.resumeValidation();\n    var unsubscriptions = [form.subscribe(function (s) {\n      if (!shallowEqual(s, stateRef.current)) {\n        setState(s);\n      }\n    }, subscription)].concat(decorators ? decorators.map(function (decorator) {\n      return (// this noop ternary is to appease the flow gods\n        // istanbul ignore next\n        decorator(form)\n      );\n    }) : []);\n    return function () {\n      form.pauseValidation(); // pause validation so we don't revalidate on every field deregistration\n\n      unsubscriptions.reverse().forEach(function (unsubscribe) {\n        return unsubscribe();\n      }); // don't need to resume validation here; either unmounting, or will re-run this hook with new deps\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, decorators); // warn about decorator changes\n  // istanbul ignore next\n\n  if (process.env.NODE_ENV !== \"production\") {\n    // You're never supposed to use hooks inside a conditional, but in this\n    // case we can be certain that you're not going to be changing your\n    // NODE_ENV between renders, so this is safe.\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    useWhenValueChanges(decorators, function () {\n      console.error(\"Form decorators should not change from one render to the next as new values will be ignored\");\n    }, shallowEqual);\n  } // allow updatable config\n\n\n  useWhenValueChanges(debug, function () {\n    form.setConfig(\"debug\", debug);\n  });\n  useWhenValueChanges(destroyOnUnregister, function () {\n    form.destroyOnUnregister = !!destroyOnUnregister;\n  });\n  useWhenValueChanges(keepDirtyOnReinitialize, function () {\n    form.setConfig(\"keepDirtyOnReinitialize\", keepDirtyOnReinitialize);\n  });\n  useWhenValueChanges(initialValues, function () {\n    form.setConfig(\"initialValues\", initialValues);\n  }, initialValuesEqual || shallowEqual);\n  useWhenValueChanges(mutators, function () {\n    form.setConfig(\"mutators\", mutators);\n  });\n  useWhenValueChanges(onSubmit, function () {\n    form.setConfig(\"onSubmit\", onSubmit);\n  });\n  useWhenValueChanges(validate, function () {\n    form.setConfig(\"validate\", validate);\n  });\n  useWhenValueChanges(validateOnBlur, function () {\n    form.setConfig(\"validateOnBlur\", validateOnBlur);\n  });\n\n  var handleSubmit = function handleSubmit(event) {\n    if (event) {\n      // sometimes not true, e.g. React Native\n      if (typeof event.preventDefault === \"function\") {\n        event.preventDefault();\n      }\n\n      if (typeof event.stopPropagation === \"function\") {\n        // prevent any outer forms from receiving the event too\n        event.stopPropagation();\n      }\n    }\n\n    return form.submit();\n  };\n\n  var renderProps = {\n    form: _extends({}, form, {\n      reset: function reset(eventOrValues) {\n        if (isSyntheticEvent(eventOrValues)) {\n          // it's a React SyntheticEvent, call reset with no arguments\n          form.reset();\n        } else {\n          form.reset(eventOrValues);\n        }\n      }\n    }),\n    handleSubmit: handleSubmit\n  };\n  addLazyFormState(renderProps, state);\n  return /*#__PURE__*/React.createElement(ReactFinalFormContext.Provider, {\n    value: form\n  }, renderComponent(_extends({}, rest, {\n    __versions: versions\n  }), renderProps, \"ReactFinalForm\"));\n}\n\nfunction useForm(componentName) {\n  var form = React.useContext(ReactFinalFormContext);\n\n  if (!form) {\n    throw new Error((componentName || \"useForm\") + \" must be used inside of a <Form> component\");\n  }\n\n  return form;\n}\n\nfunction useFormState(_temp) {\n  var _ref = _temp === void 0 ? {} : _temp,\n      onChange = _ref.onChange,\n      _ref$subscription = _ref.subscription,\n      subscription = _ref$subscription === void 0 ? all$1 : _ref$subscription;\n\n  var form = useForm(\"useFormState\");\n  var firstRender = React.useRef(true);\n  var onChangeRef = React.useRef(onChange);\n  onChangeRef.current = onChange; // synchronously register and unregister to query field state for our subscription on first render\n\n  var _React$useState = React.useState(function () {\n    var initialState = {};\n    form.subscribe(function (state) {\n      initialState = state;\n    }, subscription)();\n\n    if (onChange) {\n      onChange(initialState);\n    }\n\n    return initialState;\n  }),\n      state = _React$useState[0],\n      setState = _React$useState[1];\n\n  React.useEffect(function () {\n    return form.subscribe(function (newState) {\n      if (firstRender.current) {\n        firstRender.current = false;\n      } else {\n        setState(newState);\n\n        if (onChangeRef.current) {\n          onChangeRef.current(newState);\n        }\n      }\n    }, subscription);\n  }, // eslint-disable-next-line react-hooks/exhaustive-deps\n  []);\n  var lazyState = {};\n  addLazyFormState(lazyState, state);\n  return lazyState;\n}\n\nvar _excluded$1 = [\"onChange\", \"subscription\"];\n\nfunction FormSpy(_ref) {\n  var onChange = _ref.onChange,\n      subscription = _ref.subscription,\n      rest = _objectWithoutPropertiesLoose(_ref, _excluded$1);\n\n  var reactFinalForm = useForm(\"FormSpy\");\n  var state = useFormState({\n    onChange: onChange,\n    subscription: subscription\n  });\n\n  if (onChange) {\n    return null;\n  }\n\n  var renderProps = {\n    form: _extends({}, reactFinalForm, {\n      reset: function reset(eventOrValues) {\n        if (isSyntheticEvent(eventOrValues)) {\n          // it's a React SyntheticEvent, call reset with no arguments\n          reactFinalForm.reset();\n        } else {\n          reactFinalForm.reset(eventOrValues);\n        }\n      }\n    })\n  };\n  return renderComponent(_extends({}, rest, renderProps), state, \"FormSpy\");\n}\n\nvar isReactNative = typeof window !== \"undefined\" && window.navigator && window.navigator.product && window.navigator.product === \"ReactNative\";\n\nvar getSelectedValues = function getSelectedValues(options) {\n  var result = [];\n\n  if (options) {\n    for (var index = 0; index < options.length; index++) {\n      var option = options[index];\n\n      if (option.selected) {\n        result.push(option.value);\n      }\n    }\n  }\n\n  return result;\n};\n\nvar getValue = function getValue(event, currentValue, valueProp, isReactNative) {\n  if (!isReactNative && event.nativeEvent && event.nativeEvent.text !== undefined) {\n    return event.nativeEvent.text;\n  }\n\n  if (isReactNative && event.nativeEvent) {\n    return event.nativeEvent.text;\n  }\n\n  var detypedEvent = event;\n  var _detypedEvent$target = detypedEvent.target,\n      type = _detypedEvent$target.type,\n      value = _detypedEvent$target.value,\n      checked = _detypedEvent$target.checked;\n\n  switch (type) {\n    case \"checkbox\":\n      if (valueProp !== undefined) {\n        // we are maintaining an array, not just a boolean\n        if (checked) {\n          // add value to current array value\n          return Array.isArray(currentValue) ? currentValue.concat(valueProp) : [valueProp];\n        } else {\n          // remove value from current array value\n          if (!Array.isArray(currentValue)) {\n            return currentValue;\n          }\n\n          var index = currentValue.indexOf(valueProp);\n\n          if (index < 0) {\n            return currentValue;\n          } else {\n            return currentValue.slice(0, index).concat(currentValue.slice(index + 1));\n          }\n        }\n      } else {\n        // it's just a boolean\n        return !!checked;\n      }\n\n    case \"select-multiple\":\n      return getSelectedValues(event.target.options);\n\n    default:\n      return value;\n  }\n};\n\n/**\n * Creates a callback, even with closures, that will be\n * instance === for the lifetime of the component, always\n * calling the most recent version of the function and its\n * closures.\n */\n\nfunction useConstantCallback(callback) {\n  var ref = React.useRef(callback);\n  React.useEffect(function () {\n    ref.current = callback;\n  });\n  return React.useCallback(function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return ref.current.apply(null, args);\n  }, []);\n}\n\nvar all = fieldSubscriptionItems.reduce(function (result, key) {\n  result[key] = true;\n  return result;\n}, {});\n\nvar defaultFormat = function defaultFormat(value, name) {\n  return value === undefined ? \"\" : value;\n};\n\nvar defaultParse = function defaultParse(value, name) {\n  return value === \"\" ? undefined : value;\n};\n\nvar defaultIsEqual = function defaultIsEqual(a, b) {\n  return a === b;\n};\n\nfunction useField(name, config) {\n  if (config === void 0) {\n    config = {};\n  }\n\n  var _config = config,\n      afterSubmit = _config.afterSubmit,\n      allowNull = _config.allowNull,\n      component = _config.component,\n      data = _config.data,\n      defaultValue = _config.defaultValue,\n      _config$format = _config.format,\n      format = _config$format === void 0 ? defaultFormat : _config$format,\n      formatOnBlur = _config.formatOnBlur,\n      initialValue = _config.initialValue,\n      multiple = _config.multiple,\n      _config$parse = _config.parse,\n      parse = _config$parse === void 0 ? defaultParse : _config$parse,\n      _config$subscription = _config.subscription,\n      subscription = _config$subscription === void 0 ? all : _config$subscription,\n      type = _config.type,\n      validateFields = _config.validateFields,\n      _value = _config.value;\n  var form = useForm(\"useField\");\n  var configRef = useLatest(config);\n\n  var register = function register(callback, silent) {\n    return (// avoid using `state` const in any closures created inside `register`\n      // because they would refer `state` from current execution context\n      // whereas actual `state` would defined in the subsequent `useField` hook\n      // execution\n      // (that would be caused by `setState` call performed in `register` callback)\n      form.registerField(name, callback, subscription, {\n        afterSubmit: afterSubmit,\n        beforeSubmit: function beforeSubmit() {\n          var _configRef$current = configRef.current,\n              beforeSubmit = _configRef$current.beforeSubmit,\n              formatOnBlur = _configRef$current.formatOnBlur,\n              _configRef$current$fo = _configRef$current.format,\n              format = _configRef$current$fo === void 0 ? defaultFormat : _configRef$current$fo;\n\n          if (formatOnBlur) {\n            var _ref = form.getFieldState(name),\n                value = _ref.value;\n\n            var formatted = format(value, name);\n\n            if (formatted !== value) {\n              form.change(name, formatted);\n            }\n          }\n\n          return beforeSubmit && beforeSubmit();\n        },\n        data: data,\n        defaultValue: defaultValue,\n        getValidator: function getValidator() {\n          return configRef.current.validate;\n        },\n        initialValue: initialValue,\n        isEqual: function isEqual(a, b) {\n          return (configRef.current.isEqual || defaultIsEqual)(a, b);\n        },\n        silent: silent,\n        validateFields: validateFields\n      })\n    );\n  };\n\n  var firstRender = React.useRef(true); // synchronously register and unregister to query field state for our subscription on first render\n\n  var _React$useState = React.useState(function () {\n    var initialState = {}; // temporarily disable destroyOnUnregister\n\n    // temporarily disable destroyOnUnregister\n    var destroyOnUnregister = form.destroyOnUnregister;\n    form.destroyOnUnregister = false;\n    register(function (state) {\n      initialState = state;\n    }, true)(); // return destroyOnUnregister to its original value\n\n    // return destroyOnUnregister to its original value\n    form.destroyOnUnregister = destroyOnUnregister;\n    return initialState;\n  }),\n      state = _React$useState[0],\n      setState = _React$useState[1];\n\n  React.useEffect(function () {\n    return register(function (state) {\n      if (firstRender.current) {\n        firstRender.current = false;\n      } else {\n        setState(state);\n      }\n    }, false);\n  }, // eslint-disable-next-line react-hooks/exhaustive-deps\n  [name, data, defaultValue, // If we want to allow inline fat-arrow field-level validation functions, we\n  // cannot reregister field every time validate function !==.\n  // validate,\n  initialValue // The validateFields array is often passed as validateFields={[]}, creating\n  // a !== new array every time. If it needs to be changed, a rerender/reregister\n  // can be forced by changing the key prop\n  // validateFields\n  ]);\n  var meta = {};\n  addLazyFieldMetaState(meta, state);\n  var input = {\n    name: name,\n\n    get value() {\n      var value = state.value;\n\n      if (formatOnBlur) {\n        if (component === \"input\") {\n          value = defaultFormat(value);\n        }\n      } else {\n        value = format(value, name);\n      }\n\n      if (value === null && !allowNull) {\n        value = \"\";\n      }\n\n      if (type === \"checkbox\" || type === \"radio\") {\n        return _value;\n      } else if (component === \"select\" && multiple) {\n        return value || [];\n      }\n\n      return value;\n    },\n\n    get checked() {\n      var value = state.value;\n\n      if (type === \"checkbox\") {\n        value = format(value, name);\n\n        if (_value === undefined) {\n          return !!value;\n        } else {\n          return !!(Array.isArray(value) && ~value.indexOf(_value));\n        }\n      } else if (type === \"radio\") {\n        return format(value, name) === _value;\n      }\n\n      return undefined;\n    },\n\n    onBlur: useConstantCallback(function (event) {\n      state.blur();\n\n      if (formatOnBlur) {\n        /**\n         * Here we must fetch the value directly from Final Form because we cannot\n         * trust that our `state` closure has the most recent value. This is a problem\n         * if-and-only-if the library consumer has called `onChange()` immediately\n         * before calling `onBlur()`, but before the field has had a chance to receive\n         * the value update from Final Form.\n         */\n        var fieldState = form.getFieldState(state.name);\n        state.change(format(fieldState.value, state.name));\n      }\n    }),\n    onChange: useConstantCallback(function (event) {\n      // istanbul ignore next\n      if (process.env.NODE_ENV !== \"production\" && event && event.target) {\n        var targetType = event.target.type;\n        var unknown = ~[\"checkbox\", \"radio\", \"select-multiple\"].indexOf(targetType) && !type && component !== \"select\";\n\n        var _value2 = targetType === \"select-multiple\" ? state.value : _value;\n\n        if (unknown) {\n          console.error(\"You must pass `type=\\\"\" + (targetType === \"select-multiple\" ? \"select\" : targetType) + \"\\\"` prop to your Field(\" + name + \") component.\\n\" + (\"Without it we don't know how to unpack your `value` prop - \" + (Array.isArray(_value2) ? \"[\" + _value2 + \"]\" : \"\\\"\" + _value2 + \"\\\"\") + \".\"));\n        }\n      }\n\n      var value = event && event.target ? getValue(event, state.value, _value, isReactNative) : event;\n      state.change(parse(value, name));\n    }),\n    onFocus: useConstantCallback(function (event) {\n      return state.focus();\n    })\n  };\n\n  if (multiple) {\n    input.multiple = multiple;\n  }\n\n  if (type !== undefined) {\n    input.type = type;\n  }\n\n  var renderProps = {\n    input: input,\n    meta: meta\n  }; // assign to force Flow check\n\n  return renderProps;\n}\n\nvar _excluded = [\"afterSubmit\", \"allowNull\", \"beforeSubmit\", \"children\", \"component\", \"data\", \"defaultValue\", \"format\", \"formatOnBlur\", \"initialValue\", \"isEqual\", \"multiple\", \"name\", \"parse\", \"subscription\", \"type\", \"validate\", \"validateFields\", \"value\"];\nvar Field = /*#__PURE__*/React.forwardRef(function Field(_ref, ref) {\n  var afterSubmit = _ref.afterSubmit,\n      allowNull = _ref.allowNull,\n      beforeSubmit = _ref.beforeSubmit,\n      children = _ref.children,\n      component = _ref.component,\n      data = _ref.data,\n      defaultValue = _ref.defaultValue,\n      format = _ref.format,\n      formatOnBlur = _ref.formatOnBlur,\n      initialValue = _ref.initialValue,\n      isEqual = _ref.isEqual,\n      multiple = _ref.multiple,\n      name = _ref.name,\n      parse = _ref.parse,\n      subscription = _ref.subscription,\n      type = _ref.type,\n      validate = _ref.validate,\n      validateFields = _ref.validateFields,\n      value = _ref.value,\n      rest = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  var field = useField(name, {\n    afterSubmit: afterSubmit,\n    allowNull: allowNull,\n    beforeSubmit: beforeSubmit,\n    children: children,\n    component: component,\n    data: data,\n    defaultValue: defaultValue,\n    format: format,\n    formatOnBlur: formatOnBlur,\n    initialValue: initialValue,\n    isEqual: isEqual,\n    multiple: multiple,\n    parse: parse,\n    subscription: subscription,\n    type: type,\n    validate: validate,\n    validateFields: validateFields,\n    value: value\n  });\n\n  if (typeof children === \"function\") {\n    return children(_extends({}, field, rest));\n  }\n\n  if (typeof component === \"string\") {\n    // ignore meta, combine input with any other props\n    return /*#__PURE__*/React.createElement(component, _extends({}, field.input, {\n      children: children,\n      ref: ref\n    }, rest));\n  }\n\n  if (!name) {\n    throw new Error(\"prop name cannot be undefined in <Field> component\");\n  }\n\n  return renderComponent(_extends({\n    children: children,\n    component: component,\n    ref: ref\n  }, rest), field, \"Field(\" + name + \")\");\n});\n\nfunction withTypes() {\n  return {\n    Form: ReactFinalForm,\n    FormSpy: FormSpy\n  };\n}\n\nexport { Field, ReactFinalForm as Form, FormSpy, useField, useForm, useFormState, version, withTypes };\n","export const composeValidators = (...validators: any[]) => (value: any) =>\r\n   validators.reduce((error, validator) => error || validator(value), undefined)\r\n\r\nexport const required = (value: string | undefined) =>\r\n   value ? undefined : 'Required'\r\n","import React, {DetailedHTMLProps, InputHTMLAttributes} from 'react';\r\nimport {Field} from \"react-final-form\";\r\nimport {FieldValidator} from \"final-form\";\r\nimport {composeValidators} from \"../Utils/Validators/validators\";\r\n\r\nexport const FieldForm: React.FC<FieldFormType> = React.memo((\r\n   { name, validators, type, placeholder, label, submitError}\r\n) => {\r\n   return (\r\n      <Field name={name} validate={validators && composeValidators(validators)}>\r\n         {\r\n            ({input, meta}) => (\r\n               <div>\r\n                  <label>{label}</label>\r\n                  <input {...input} type={type} placeholder={placeholder}/>\r\n                  {meta.error && meta.touched && <span>{meta.error}</span>}\r\n               </div>\r\n            )\r\n         }\r\n      </Field>\r\n   )\r\n})\r\n\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\ntype FieldFormType = DefaultInputPropsType & {\r\n   name: string\r\n   validators?: FieldValidator<any>\r\n   type: string\r\n   spanClassName?: string\r\n   label?: string\r\n   submitError?: any\r\n}","import React, {ChangeEvent, useState} from 'react';\r\nimport s from \"../profile.module.scss\";\r\nimport {Status} from \"./Status/Status\";\r\nimport {ErrorBoundary} from \"../../../Commons/ErrorBoundary/ErrorBoundary\";\r\nimport ava from '../../../../assets/ava.png'\r\nimport {ProfileUserInfoType} from \"../../../../redux/profile/profileReducer\";\r\nimport {FieldForm} from \"../../../Commons/FieldForm/FieldForm\";\r\nimport {Form} from \"react-final-form\";\r\nimport {FORM_ERROR} from \"final-form\";\r\n\r\nexport const ProfileUserInfo: React.FC<ProfileUserInfoBlock> = React.memo((props) => {\r\n   const {profileUserInfo, updatePhotoCallback, authId, updateProfileDataCallback,...statusProps} = props\r\n   const {fullName, userId, photos, contacts,} = profileUserInfo\r\n   const keys: string[] = Object.keys(profileUserInfo.contacts)\r\n   const [editMode, setEditMode] = useState(false)\r\n   const onDownloadFile = (e: ChangeEvent<HTMLInputElement>) => e.target.files && updatePhotoCallback(e.target.files[0])\r\n   const onSubmitHandler = async (profileData: ProfileUserInfoType) => {\r\n      let data = await updateProfileDataCallback(profileData)\r\n      if (data.resultCode === 1) {\r\n         return {[FORM_ERROR]: data.messages[0]}\r\n      } else {\r\n         setEditMode(false)\r\n      }\r\n   }\r\n   return (\r\n      <ErrorBoundary>\r\n         <div>\r\n            <div className={s.profile__info}>\r\n               <div className={s.profile__info_img}>\r\n                  <img src={photos.large !== null ? photos.large : ava} alt=\"Profile photo\"/>\r\n                  {\r\n                     authId === Number(userId) &&\r\n                     <div>\r\n                       <input type=\"file\" onChange={onDownloadFile}/>\r\n                     </div>\r\n                  }\r\n               </div>\r\n               <div className={s.profile__info_text}>\r\n                  <h3>{fullName}</h3>\r\n                  <Status {...statusProps} authId={authId}/>\r\n                  <h4>{contacts.github}</h4>\r\n               </div>\r\n            </div>\r\n            {\r\n               !editMode\r\n                  ? <ProfileData profileUserInfo={profileUserInfo} setEditMode={setEditMode} contactsKeys={keys}/>\r\n                  : <ProfileDataForm onSubmit={onSubmitHandler} contactsKeys={keys} initialValues={profileUserInfo}/>\r\n\r\n            }\r\n         </div>\r\n      </ErrorBoundary>\r\n   )\r\n})\r\n\r\n//===============================================\r\ntype ProfileDataType = {\r\n   profileUserInfo: ProfileUserInfoType\r\n   setEditMode(editMode: boolean): void\r\n   contactsKeys: string[]\r\n}\r\nconst ProfileData: React.FC<ProfileDataType> = ({profileUserInfo, setEditMode, contactsKeys}) => {\r\n   const onClickEditHandler = () => setEditMode(true)\r\n\r\n   return (\r\n      <div>\r\n         <div>\r\n            <h4>aboutMe</h4><span>{profileUserInfo.aboutMe}</span>\r\n         </div>\r\n         <div>\r\n            <h4>lookingForAJob</h4><span>{profileUserInfo.lookingForAJob ? \"Yes\" : \"No\"}</span>\r\n         </div>\r\n         {profileUserInfo.lookingForAJob &&\r\n         <div>\r\n           <h4>lookingForAJobDescription</h4><span>{profileUserInfo.lookingForAJobDescription}</span>\r\n         </div>\r\n         }\r\n         {\r\n            // @ts-ignore\r\n            contactsKeys.map(key => <Contact key={key} contactKey={key} value={profileUserInfo.contacts[key]}/>)\r\n         }\r\n         <button onClick={onClickEditHandler}>Edit</button>\r\n      </div>\r\n   )\r\n}\r\n\r\n//===============================================\r\ntype ContactType = {\r\n   contactKey: string\r\n   value: string | null\r\n}\r\nconst Contact: React.FC<ContactType> = ({contactKey, value}) => {\r\n   return (\r\n      <div>\r\n         <h4>{contactKey}</h4><span>{value !== null ? value : \"no\"}</span>\r\n      </div>\r\n   )\r\n}\r\n\r\n//===============================================\r\ntype ProfileDataFormType = {\r\n   onSubmit(profileData: ProfileUserInfoType): void\r\n   initialValues: ProfileUserInfoType\r\n   contactsKeys: string[]\r\n}\r\nconst ProfileDataForm: React.FC<ProfileDataFormType> = ({onSubmit, contactsKeys, initialValues}) => {\r\n   return (\r\n      <Form\r\n         onSubmit={onSubmit} initialValues={initialValues}\r\n         render={\r\n            ({handleSubmit, submitError,}) => (\r\n               <form onSubmit={handleSubmit}>\r\n                  <h2>Profile Info</h2>\r\n                  <div>\r\n                     <FieldForm type={\"text\"} placeholder={\"fullName\"} name={\"fullName\"} />\r\n                  </div>\r\n                  <div>\r\n                     <FieldForm type={\"text\"} placeholder={\"aboutMe\"} name={\"aboutMe\"}/>\r\n                  </div>\r\n                  <div>\r\n                     <label>lookingForAJob</label>\r\n                     <FieldForm type={\"checkbox\"} name={\"lookingForAJob\"}/>\r\n                  </div>\r\n                  <div>\r\n                     <FieldForm type={\"text\"} placeholder={\"lookingForAJobDescription\"} name={\"lookingForAJobDescription\"}/>\r\n                  </div>\r\n                  <h2>Contacts</h2>\r\n                  {\r\n                     contactsKeys.map(key => <FieldForm type={\"text\"} placeholder={key} name={`contacts.${key}`} submitError={submitError}/>)\r\n                  }\r\n                  <button type=\"submit\">Submit</button>\r\n                  {submitError && <span style={{color: \"red\"}}>{submitError}</span>}\r\n               </form>\r\n            )\r\n         }\r\n      />\r\n   )\r\n}\r\n\r\n//===============================================\r\ntype ProfileUserInfoBlock = {\r\n   profileUserInfo: ProfileUserInfoType\r\n   status: string\r\n   authId: number | null\r\n   userIdFromURL?: string | null\r\n   updateStatusCallback(status: string): void\r\n   updatePhotoCallback(file: File): void\r\n   updateProfileDataCallback(profileData: ProfileUserInfoType): Promise<any>\r\n}\r\n","import React from 'react';\r\nimport s from \"../profile.module.scss\";\r\nimport {Form} from \"react-final-form\";\r\nimport {FieldForm} from \"../../../Commons/FieldForm/FieldForm\";\r\nimport {ErrorBoundary} from \"../../../Commons/ErrorBoundary/ErrorBoundary\";\r\n\r\nexport const ProfileForm: React.FC<ProfileFormType> = React.memo(({addPostCallback}) => {\r\n   const onSubmitHandler = ({post}: PostSubmitType) => addPostCallback(post)\r\n   return (\r\n      <ErrorBoundary>\r\n         <div className={s.profile__addPost}>\r\n            <Form\r\n               onSubmit={onSubmitHandler}\r\n               render={\r\n                  ({handleSubmit,}) => (\r\n                     <form onSubmit={handleSubmit}>\r\n                        <div>\r\n                           <FieldForm type={\"text\"} placeholder={\"Add new message\"} name={\"post\"}\r\n                                      className={\"messages__addPost_btn\"}/>\r\n                        </div>\r\n                        <button type=\"submit\" className={s.messages__addPost_btn}>Add</button>\r\n                     </form>\r\n                  )\r\n               }\r\n            />\r\n         </div>\r\n      </ErrorBoundary>\r\n   );\r\n})\r\n\r\ntype ProfileFormType = {\r\n   addPostCallback(post: string): void\r\n}\r\ntype PostSubmitType = {\r\n   post: string\r\n}","import React from \"react\";\r\nimport s from './post.module.scss'\r\n\r\nexport type PostsType = {\r\n   id: string\r\n   message: string\r\n   like: number\r\n}\r\nconst Post: React.FC<PostsType> = (props) => {\r\n   return (\r\n      <div className={s.post}>\r\n         <p className={s.post_message}>{props.message}</p>\r\n         <button className={s.post_like}>{props.like}</button>\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from \"../profile.module.scss\";\r\nimport Post, {PostsType} from \"./Post/Post\";\r\nimport {ErrorBoundary} from \"../../../Commons/ErrorBoundary/ErrorBoundary\";\r\n\r\nexport const Posts: React.FC<PostsTypeBlock> = ({ posts }) => {\r\n   return (\r\n      <ErrorBoundary>\r\n         <h3 className={s.profile__postTitle}>My posts</h3>\r\n         <div className={s.profile__posts}>\r\n            {posts.map(p => <Post id={p.id} message={p.message} like={p.like} key={p.id}/>)}\r\n         </div>\r\n      </ErrorBoundary>\r\n   );\r\n};\r\n\r\ntype PostsTypeBlock = {\r\n   posts: PostsType[]\r\n}","import React from \"react\";\r\nimport s from './profile.module.scss'\r\nimport {PostsType} from \"./Posts/Post/Post\";\r\nimport {ProfileUserInfoType} from \"../../../redux/profile/profileReducer\";\r\nimport {ProfileUserInfo} from \"./ProfileInfo/ProfileUserInfo\";\r\nimport {ProfileForm} from \"./ProfileForm/ProfileForm\";\r\nimport {Posts} from \"./Posts/Posts\";\r\n\r\nexport const Profile: React.FC<ProfileType> = React.memo((props) => {\r\n   const { posts, addPostCallback, ...profileUserInfoProps } = props\r\n\r\n   return (\r\n      <div className={s.profile}>\r\n         <ProfileUserInfo {...profileUserInfoProps}/>\r\n         <Posts posts={posts}/>\r\n         <ProfileForm addPostCallback={addPostCallback}/>\r\n      </div>\r\n   )\r\n})\r\n\r\ntype ProfileType = {\r\n   profileUserInfo: ProfileUserInfoType\r\n   posts: PostsType[]\r\n   status: string\r\n   authId: number | null\r\n   userIdFromURL?: string | null\r\n   addPostCallback(post: string): void\r\n   updateStatusCallback(status: string): void\r\n   updatePhotoCallback(file: File): void\r\n   updateProfileDataCallback(profileData: ProfileUserInfoType): Promise<any>\r\n}\r\n","import {RootState} from \"../redax-store\";\r\nimport {ProfileUserInfoType} from \"./profileReducer\";\r\nimport {PostsType} from \"../../Components/Content/Profile/Posts/Post/Post\";\r\n\r\nexport const getUserInfo = (state: RootState): ProfileUserInfoType => state.profilePage.profileUserInfo\r\nexport const getPosts = (state: RootState): PostsType[] => state.profilePage.posts\r\nexport const getAuthId = (state: RootState): number | null => state.authState.id\r\nexport const getStatus = (state: RootState): string => state.profilePage.status\r\n\r\n// Example\r\n// export const getSelectorPosts = createSelector(getPosts, (posts) => posts.filter(p => true))\r\n","import {RootState} from \"../../../redux/redax-store\";\r\nimport {Profile} from \"./Profile\";\r\nimport React, {Component, ComponentType, PureComponent} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {ProfileUserInfoType} from \"../../../redux/profile/profileReducer\";\r\nimport {PostsType} from \"./Posts/Post/Post\";\r\nimport {\r\n   addPost,\r\n   getProfileStatus,\r\n   getProfileUserInfo, updateProfileData,\r\n   updateProfileStatus,\r\n   uploadProfilePhoto\r\n} from \"../../../redux/profile/profileThunk\";\r\nimport {withRouter} from \"../../../hoc/withRouter\";\r\nimport {compose} from \"@reduxjs/toolkit\";\r\nimport {withAuthRedirect} from \"../../../hoc/withAuthRedirect\";\r\nimport {getAuthId, getPosts, getStatus, getUserInfo} from \"../../../redux/profile/profileSelectors\";\r\n\r\nclass ContainerProfile extends PureComponent<ContainerProfilePropsType> {\r\n   loadProfileData = () => {\r\n      let userIdFromURL: number | null = Number(this.props.userIdFromURL)\r\n      if (!userIdFromURL) userIdFromURL = this.props.authId\r\n      this.props.getProfileUserInfo(userIdFromURL)\r\n      this.props.getProfileStatus(userIdFromURL)\r\n   }\r\n   componentDidMount = () => this.loadProfileData()\r\n   componentDidUpdate = (prevProps: Readonly<ContainerProfilePropsType>) => {\r\n      const id = this.props.userIdFromURL\r\n      const prevId = prevProps.userIdFromURL\r\n      const prevLargePhoto = prevProps.profileUserInfo.photos.large\r\n      const largePhoto = this.props.profileUserInfo.photos.large;\r\n      (id !== prevId || largePhoto !== prevLargePhoto) && this.loadProfileData()\r\n   }\r\n\r\n   addPostCallback = (post: string) => this.props.addPost(post)\r\n   updateStatusCallback = (status: string) => this.props.updateProfileStatus(status)\r\n   updatePhotoCallback = (file: File) => this.props.uploadProfilePhoto(file)\r\n   updateProfileDataCallback = (profileData: ProfileUserInfoType) => this.props.updateProfileData(profileData)\r\n\r\n   render = () => {\r\n      return (\r\n         <Profile {...this.props} userIdFromURL={this.props.userIdFromURL}\r\n                  updateProfileDataCallback={this.updateProfileDataCallback}\r\n                  updatePhotoCallback={this.updatePhotoCallback}\r\n                  addPostCallback={this.addPostCallback}\r\n                  updateStatusCallback={this.updateStatusCallback}\r\n         />\r\n      )\r\n   }\r\n}\r\n\r\nexport type ContainerProfilePropsType = MapStateToPropsType & MapDispatchToPropsType\r\ntype MapStateToPropsType = {\r\n   profileUserInfo: ProfileUserInfoType\r\n   posts: PostsType[]\r\n   authId: number | null\r\n   status: string\r\n   userIdFromURL?: string | null\r\n}\r\ntype MapDispatchToPropsType = {\r\n   getProfileUserInfo(userID: number | null): void\r\n   addPost(post: string): void\r\n   getProfileStatus(userID: number | null): void\r\n   updateProfileStatus(status: string): void\r\n   uploadProfilePhoto(file: File): void\r\n   updateProfileData(profileData: ProfileUserInfoType): Promise<any>\r\n}\r\n\r\nconst mapStateToProps = (state: RootState): MapStateToPropsType => {\r\n   return {\r\n      profileUserInfo: getUserInfo(state),\r\n      posts: getPosts(state),\r\n      authId: getAuthId(state),\r\n      status: getStatus(state),\r\n   }\r\n}\r\n\r\nexport default compose<ComponentType>(\r\n   connect(mapStateToProps, {getProfileUserInfo, addPost, getProfileStatus, updateProfileStatus, uploadProfilePhoto, updateProfileData}),\r\n   withRouter,\r\n   withAuthRedirect,\r\n)(ContainerProfile)\r\n"],"sourceRoot":""}