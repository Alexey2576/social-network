{"version":3,"sources":["../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","hoc/withAuthRedirect.tsx","Components/Content/Messages/messages.module.scss","Components/Content/Messages/Users/User/user.module.scss","Components/Content/Messages/UsersMessages/UserMessages/userMessages.module.scss","Components/Content/Messages/Users/User/User.tsx","Components/Content/Messages/Users/Users.tsx","Components/Content/Messages/UsersMessages/UserMessages/UserMessages.tsx","Components/Content/Messages/UsersMessages/UsersMessages.tsx","Components/Content/Messages/MessagesForm/MessagesForm.tsx","Components/Content/Messages/Messages.tsx","redux/messages/messagesSelectors.ts","Components/Content/Messages/ContainerMessages.tsx","redux/messages/messagesThunk.ts"],"names":["_objectWithoutProperties","source","excluded","key","i","target","Object","getOwnPropertySymbols","sourceSymbolKeys","length","indexOf","prototype","propertyIsEnumerable","call","mapStateToProps","state","isAuth","authState","withAuthRedirect","Component","connect","props","restProps","module","exports","User","React","memo","name","ava","className","s","user","user__ava","src","alt","user__name","Users","users","map","u","id","UserMessages","message","userMessages","userMessages__message","UsersMessages","usersMessages","um","MessagesForm","addMessageCallback","messages__addPost","onSubmit","render","handleSubmit","FieldForm","type","placeholder","messages__addPost_btn","Messages","messages","getUsers","messagesPage","getUsersMessages","ContainerMessages","addMessage","this","PureComponent","compose","dispatch","a","addMessageAC","changeValueMessage","newChangeText","changeValueMessageAC"],"mappings":"8HAAA,6CACe,SAASA,EAAyBC,EAAQC,GACvD,GAAc,MAAVD,EAAgB,MAAO,GAC3B,IACIE,EAAKC,EADLC,EAAS,YAA6BJ,EAAQC,GAGlD,GAAII,OAAOC,sBAAuB,CAChC,IAAIC,EAAmBF,OAAOC,sBAAsBN,GAEpD,IAAKG,EAAI,EAAGA,EAAII,EAAiBC,OAAQL,IACvCD,EAAMK,EAAiBJ,GACnBF,EAASQ,QAAQP,IAAQ,GACxBG,OAAOK,UAAUC,qBAAqBC,KAAKZ,EAAQE,KACxDE,EAAOF,GAAOF,EAAOE,IAIzB,OAAOE,I,kICRHS,EAAkB,SAACC,GACtB,MAAO,CACJC,OAAQD,EAAME,UAAUD,SAIvB,SAASE,EAAoBC,GAMjC,OAAOC,YAAQN,EAARM,EAL+B,SAACC,GACpC,IAAKL,EAAwBK,EAAxBL,OAAWM,EAAhB,YAA6BD,EAA7B,GACA,OAAKL,EACE,cAACG,EAAD,eAAeG,IADF,cAAC,IAAD,S,oBCjB1BC,EAAOC,QAAU,CAAC,SAAW,2BAA2B,kBAAoB,oCAAoC,wBAA0B,0CAA0C,sBAAwB,wCAAwC,cAAgB,kC,oBCApQD,EAAOC,QAAU,CAAC,KAAO,mBAAmB,UAAY,wBAAwB,WAAa,2B,oBCA7FD,EAAOC,QAAU,CAAC,aAAe,mCAAmC,sBAAwB,8C,uICE/EC,EAA4BC,IAAMC,MAAK,YAAkB,IAAhBC,EAAe,EAAfA,KAAMC,EAAS,EAATA,IACzD,OACG,sBAAKC,UAAWC,IAAEC,KAAlB,UACG,qBAAKF,UAAWC,IAAEE,UAAWC,IAAKL,EAAKM,IAAI,KAC3C,oBAAIL,UAAWC,IAAEK,WAAjB,SAA8BR,UCH1BS,EAAkCX,IAAMC,MAAK,YAAc,IAAZW,EAAW,EAAXA,MACzD,OACG,qBAAKR,UAAWC,IAAEO,MAAlB,SACIA,EAAMC,KAAI,SAAAC,GAAC,OAAI,cAACf,EAAD,CAAMgB,GAAID,EAAEC,GAAIb,KAAMY,EAAEZ,KAAMC,IAAKW,EAAEX,KAAUW,EAAEC,Y,kBCJ7DC,EAA4ChB,IAAMC,MAAK,YAAgB,IAAdgB,EAAa,EAAbA,QACnE,OACG,qBAAKb,UAAWC,IAAEa,aAAlB,SACG,mBAAGd,UAAWC,IAAEc,sBAAhB,SAAwCF,SCFpCG,EAA8CpB,IAAMC,MAAK,YAAsB,IAApBoB,EAAmB,EAAnBA,cACrE,OACG,qBAAKjB,UAAWC,IAAEgB,cAAlB,SACIA,EAAcR,KAAI,SAAAS,GAAE,OAAI,cAACN,EAAD,CAAcD,GAAIO,EAAGP,GAAIE,QAASK,EAAGL,SAAcK,EAAGP,Y,gBCF3EQ,EAA2CvB,IAAMC,MAAK,YAA2B,IAAzBuB,EAAwB,EAAxBA,mBAElE,OACG,qBAAKpB,UAAWC,IAAEoB,kBAAlB,SACG,cAAC,IAAD,CACGC,SAJe,SAAC,GAAD,IAAET,EAAF,EAAEA,QAAF,OAAkCO,EAAmBP,IAKpEU,OACG,gBAAEC,EAAF,EAAEA,aAAF,OACG,uBAAMF,SAAUE,EAAhB,UACG,8BACG,cAACC,EAAA,EAAD,CAAWC,KAAM,OAAQC,YAAa,kBAAmB7B,KAAM,UACpDE,UAAW,4BAEzB,wBAAQ0B,KAAK,SAAS1B,UAAWC,IAAE2B,sBAAnC,4BCVRC,EAAmCjC,IAAMC,MAAK,SAACN,GACzD,IAAQ0B,EAA8C1B,EAA9C0B,cAAeT,EAA+BjB,EAA/BiB,MAAOY,EAAwB7B,EAAxB6B,mBAC9B,OACG,sBAAKpB,UAAWC,IAAE6B,SAAlB,UACG,cAACvB,EAAD,CAAOC,MAAOA,IACd,gCACG,cAACQ,EAAD,CAAeC,cAAeA,IAC9B,cAACE,EAAD,CAAcC,mBAAoBA,a,yDCXjCW,EAAW,SAAC9C,GAAD,OAAmCA,EAAM+C,aAAaxB,OACjEyB,EAAmB,SAAChD,GAAD,OAA2CA,EAAM+C,aAAaf,eCMxFiB,E,4MAEHd,mBAAqB,SAACP,GAAD,OAAqB,EAAKtB,MAAM4C,WAAWtB,I,4CAEhE,WACG,OACG,cAACgB,EAAD,CAAUrB,MAAO4B,KAAK7C,MAAMiB,MAClBS,cAAemB,KAAK7C,MAAM0B,cAC1BG,mBAAoBgB,KAAKhB,yB,GARZxB,IAAMyC,eA+BvBC,sBACZhD,aARqB,SAACL,GACtB,MAAO,CACJuB,MAAOuB,EAAS9C,GAChBgC,cAAegB,EAAiBhD,MAKV,CAAEkD,WCxCJ,SAACtB,GAAD,8CAAgC,WAAO0B,GAAP,SAAAC,EAAA,sDACvDD,EAASE,YAAa5B,IADiC,2CAAhC,uDDwCgB6B,mBCpCR,SAACC,GAAD,8CAAsC,WAAOJ,GAAP,SAAAC,EAAA,sDACrED,EAASK,YAAqBD,IADuC,2CAAtC,yDDqC/BvD,IAFYkD,CAGbJ","file":"static/js/4.f3811651.chunk.js","sourcesContent":["import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","import {RootState} from \"../redux/redax-store\";\r\nimport React, {ComponentType} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport ContainerLogin from \"../Components/Content/Login/ContainerLogin\";\r\n\r\ntype MapStateToPropsType = {\r\n   isAuth: boolean\r\n}\r\n\r\nconst mapStateToProps = (state: RootState): MapStateToPropsType => {\r\n   return {\r\n      isAuth: state.authState.isAuth\r\n   }\r\n}\r\n\r\nexport function withAuthRedirect<T>(Component: ComponentType<T>) {\r\n   const ComponentWithAuthRedirectProp = (props: MapStateToPropsType) => {\r\n      let {isAuth, ...restProps} = props\r\n      if (!isAuth) return <ContainerLogin/>\r\n      return <Component {...restProps as T}/>\r\n   }\r\n   return connect(mapStateToProps)(ComponentWithAuthRedirectProp)\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messages\":\"messages_messages__fmeRw\",\"messages__addPost\":\"messages_messages__addPost__TbDva\",\"messages__addPost_input\":\"messages_messages__addPost_input__1d9HL\",\"messages__addPost_btn\":\"messages_messages__addPost_btn__N95t9\",\"usersMessages\":\"messages_usersMessages__2useX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user\":\"user_user__3O_Rm\",\"user__ava\":\"user_user__ava__hREbY\",\"user__name\":\"user_user__name__3vDoJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userMessages\":\"userMessages_userMessages__2QME_\",\"userMessages__message\":\"userMessages_userMessages__message__2SzYE\"};","import React from \"react\";\r\nimport s from './user.module.scss'\r\n\r\nexport const User: React.FC<UsersType> = React.memo(({name, ava}) => {\r\n   return (\r\n      <div className={s.user}>\r\n         <img className={s.user__ava} src={ava} alt=\"\"/>\r\n         <h4 className={s.user__name}>{name}</h4>\r\n      </div>\r\n   )\r\n})\r\n\r\nexport type UsersType = {\r\n   id: string\r\n   name: string\r\n   ava: string\r\n}","import React from 'react';\r\nimport s from \"../messages.module.scss\";\r\nimport {User, UsersType} from \"./User/User\";\r\n\r\nexport const Users: React.FC<UsersTypeBlock> = React.memo(({users}) => {\r\n   return (\r\n      <div className={s.users}>\r\n         {users.map(u => <User id={u.id} name={u.name} ava={u.ava} key={u.id}/>)}\r\n      </div>\r\n   );\r\n});\r\n\r\ntype UsersTypeBlock = {\r\n   users: UsersType[]\r\n}","import React from \"react\";\r\nimport s from './userMessages.module.scss'\r\n\r\nexport const UserMessages: React.FC<UsersMessagesType> = React.memo(({message}) => {\r\n   return (\r\n      <div className={s.userMessages}>\r\n         <p className={s.userMessages__message}>{message}</p>\r\n      </div>\r\n   )\r\n})\r\n\r\nexport type UsersMessagesType = {\r\n   id: string\r\n   message: string\r\n}","import React from 'react';\r\nimport s from \"../messages.module.scss\";\r\nimport {UserMessages, UsersMessagesType} from \"./UserMessages/UserMessages\";\r\n\r\nexport const UsersMessages: React.FC<UsersMessagesBlock> = React.memo(({usersMessages}) => {\r\n   return (\r\n      <div className={s.usersMessages}>\r\n         {usersMessages.map(um => <UserMessages id={um.id} message={um.message} key={um.id}/>)}\r\n      </div>\r\n   );\r\n});\r\n\r\ntype UsersMessagesBlock = {\r\n   usersMessages: UsersMessagesType[]\r\n}","import React from 'react';\r\nimport s from \"../messages.module.scss\";\r\nimport {Form} from \"react-final-form\";\r\nimport {FieldForm} from \"../../../Commons/FieldForm/FieldForm\";\r\n\r\nexport const MessagesForm: React.FC<MessagesFormType> = React.memo(({addMessageCallback}) => {\r\n   const onSubmitHandler = ({message}: MessageSubmitType) => addMessageCallback(message)\r\n   return (\r\n      <div className={s.messages__addPost}>\r\n         <Form\r\n            onSubmit={onSubmitHandler}\r\n            render={\r\n               ({handleSubmit,}) => (\r\n                  <form onSubmit={handleSubmit}>\r\n                     <div>\r\n                        <FieldForm type={\"text\"} placeholder={\"Add new message\"} name={\"message\"}\r\n                                   className={\"messages__addPost_btn\"}/>\r\n                     </div>\r\n                     <button type=\"submit\" className={s.messages__addPost_btn}>Add</button>\r\n                  </form>\r\n               )\r\n            }\r\n         />\r\n      </div>\r\n   );\r\n});\r\n\r\ntype MessagesFormType = {\r\n   addMessageCallback(message: string): void\r\n}\r\ntype MessageSubmitType = {\r\n   message: string\r\n}","import React from \"react\";\r\nimport s from './messages.module.scss'\r\nimport {UsersMessagesType} from \"./UsersMessages/UserMessages/UserMessages\";\r\nimport {UsersType} from \"./Users/User/User\";\r\nimport {Users} from \"./Users/Users\";\r\nimport {UsersMessages} from \"./UsersMessages/UsersMessages\";\r\nimport {MessagesForm} from \"./MessagesForm/MessagesForm\";\r\n\r\nexport const Messages: React.FC<MessagesType> = React.memo((props) => {\r\n   const { usersMessages, users, addMessageCallback, } = props\r\n   return (\r\n      <div className={s.messages}>\r\n         <Users users={users}/>\r\n         <div>\r\n            <UsersMessages usersMessages={usersMessages}/>\r\n            <MessagesForm addMessageCallback={addMessageCallback}/>\r\n         </div>\r\n      </div>\r\n   )\r\n})\r\n\r\nexport type MessagesType = {\r\n   usersMessages: UsersMessagesType[]\r\n   users: UsersType[]\r\n   addMessageCallback(message: string): void\r\n}\r\n","import {RootState} from \"../redax-store\";\r\nimport {UsersType} from \"../../Components/Content/Messages/Users/User/User\";\r\nimport {UsersMessagesType} from \"../../Components/Content/Messages/UsersMessages/UserMessages/UserMessages\";\r\n\r\nexport const getUsers = (state: RootState): UsersType[] => state.messagesPage.users\r\nexport const getUsersMessages = (state: RootState): UsersMessagesType[] => state.messagesPage.usersMessages","import {RootState} from \"../../../redux/redax-store\";\r\nimport {Messages} from \"./Messages\";\r\nimport React, {ComponentType} from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {UsersMessagesType} from \"./UsersMessages/UserMessages/UserMessages\";\r\nimport {UsersType} from \"./Users/User/User\";\r\nimport {addMessage, changeValueMessage} from \"../../../redux/messages/messagesThunk\";\r\nimport {compose} from \"@reduxjs/toolkit\";\r\nimport {withAuthRedirect} from \"../../../hoc/withAuthRedirect\";\r\nimport {getUsers, getUsersMessages} from \"../../../redux/messages/messagesSelectors\";\r\n\r\nclass ContainerMessages extends React.PureComponent<ContainerMessagesPropsType> {\r\n\r\n   addMessageCallback = (message: string) => this.props.addMessage(message)\r\n\r\n   render() {\r\n      return (\r\n         <Messages users={this.props.users}\r\n                   usersMessages={this.props.usersMessages}\r\n                   addMessageCallback={this.addMessageCallback}\r\n         />\r\n      )\r\n   }\r\n}\r\n\r\nexport type ContainerMessagesPropsType = MapStateToPropsType & MapDispatchToPropsType\r\ntype MapStateToPropsType = {\r\n   users: UsersType[]\r\n   usersMessages: UsersMessagesType[]\r\n}\r\ntype MapDispatchToPropsType = {\r\n   addMessage(message:string): void\r\n   changeValueMessage(newChangeText: string): void\r\n}\r\n\r\nconst mapStateToProps = (state: RootState): MapStateToPropsType => {\r\n   return {\r\n      users: getUsers(state),\r\n      usersMessages: getUsersMessages(state),\r\n   }\r\n}\r\n\r\nexport default compose<ComponentType>(\r\n   connect(mapStateToProps, { addMessage, changeValueMessage }),\r\n   withAuthRedirect,\r\n)(ContainerMessages)","import {addMessageAC, changeValueMessageAC} from \"./messagesActions\";\r\nimport {ThunkDispatchType, ThunkType} from \"../redax-store\";\r\n\r\nexport const addMessage = (message: string): ThunkType => async (dispatch: ThunkDispatchType) => {\r\n   dispatch(addMessageAC(message))\r\n}\r\n\r\nexport const changeValueMessage = (newChangeText: string): ThunkType => async (dispatch: ThunkDispatchType) => {\r\n   dispatch(changeValueMessageAC(newChangeText))\r\n}\r\n"],"sourceRoot":""}