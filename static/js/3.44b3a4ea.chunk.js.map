{"version":3,"sources":["../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","hoc/withAuthRedirect.tsx","assets/ava.png","Components/Content/Peoples/People/People.tsx","Components/Commons/Paginator/Paginator.tsx","Components/Content/Peoples/PeopleFollowUnfollow/PeopleFollowUnfollow.tsx","Components/Content/Peoples/Peoples.tsx","assets/preloader/preloader.svg","Components/Commons/Preloader/Preloader.tsx","redux/peoples/peoplesSelectors.ts","Components/Content/Peoples/ContainerPeoples.tsx","redux/peoples/peoplesThunk.ts"],"names":["_objectWithoutProperties","source","excluded","key","i","target","Object","getOwnPropertySymbols","sourceSymbolKeys","length","indexOf","prototype","propertyIsEnumerable","call","mapStateToProps","state","isAuth","authState","withAuthRedirect","Component","connect","props","restProps","People","React","memo","name","status","photos","id","className","to","src","small","ava","alt","Paginator","totalCount","pageSize","paginatorSize","setCurrentPageCallback","paginatorCount","Math","ceil","useState","paginatorNumber","setPaginatorNumber","leftPaginatorPageSize","rightPaginatorPageSize","massPages","useMemo","countPages","pages","push","onClickPageHandler","e","Number","currentTarget","value","onClick","filter","p","map","PeopleFollowUnfollow","people","following_ID","unfollowCallback","followCallback","followed","disabled","some","Peoples","peoples","Preloader","preloader","getPeoplesFromState","peoplesPage","getTotalCount","getCurrentPage","currentPage","getPageSize","countPeoplesOnPage","getIsFetching","isFetching","getFlag","flag","getIsFollowing","isFollowing","getFollowing_ID","ContainerPeoples","componentDidMount","getPeoples","people_id","follow","unfollow","render","PureComponent","compose","people_ID","dispatch","a","followUnfollowFlow","userAPI","setFollow","followSuccess","setUnfollow","unfollowSuccess","getUsers","data","setPeoples","items","setTotalCount","setCurrentPage","console","log"],"mappings":"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","file":"static/js/3.44b3a4ea.chunk.js","sourcesContent":["import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","import {RootState} from \"../redux/redax-store\";\r\nimport React, {ComponentType} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport ContainerLogin from \"../Components/Content/Login/ContainerLogin\";\r\n\r\ntype MapStateToPropsType = {\r\n   isAuth: boolean\r\n}\r\n\r\nconst mapStateToProps = (state: RootState): MapStateToPropsType => {\r\n   return {\r\n      isAuth: state.authState.isAuth\r\n   }\r\n}\r\n\r\nexport function withAuthRedirect<T>(Component: ComponentType<T>) {\r\n   const ComponentWithAuthRedirectProp = (props: MapStateToPropsType) => {\r\n      let {isAuth, ...restProps} = props\r\n      if (!isAuth) return <ContainerLogin/>\r\n      return <Component {...restProps as T}/>\r\n   }\r\n   return connect(mapStateToProps)(ComponentWithAuthRedirectProp)\r\n}","export default __webpack_public_path__ + \"static/media/ava.c429bb80.png\";","import React from 'react';\r\nimport './people.scss';\r\nimport ava from '../../../../assets/ava.png'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nexport const People: React.FC<PeopleType> = React.memo((props) => {\r\n   const {name, status, photos, id} = props\r\n   return (\r\n      <div className=\"people_info\">\r\n         <div className=\"people_info__img\">\r\n            <NavLink to={`/profile/${id}`}>\r\n               <img src={photos.small !== null ? photos.small : ava}\r\n                    alt=\"photo_people\"\r\n                    className=\"people_info__img__photo\"/>\r\n            </NavLink>\r\n         </div>\r\n         <div className=\"people_info__text\">\r\n            <h3 className=\"people_info__text__name\">{name}</h3>\r\n            <span className=\"people_info__text__status\">{status}</span>\r\n         </div>\r\n      </div>\r\n   )\r\n})\r\n\r\nexport type PeopleType = {\r\n      id: number\r\n      name: string\r\n      status: string\r\n      photos: { small: string, large: string }\r\n      followed: boolean\r\n}\r\n\r\n","import React, {MouseEvent, useMemo, useState} from 'react';\r\nimport './Paginator.css'\r\n\r\nexport const Paginator:React.FC<PaginatorType> = React.memo((props) => {\r\n   const  { totalCount, pageSize, paginatorSize = 10,setCurrentPageCallback, } = props\r\n\r\n   const paginatorCount = Math.ceil(totalCount / paginatorSize)\r\n   const [paginatorNumber, setPaginatorNumber] = useState(1)\r\n   const leftPaginatorPageSize = (paginatorNumber - 1) * paginatorSize + 1\r\n   const rightPaginatorPageSize = paginatorNumber * paginatorSize\r\n\r\n   const massPages = useMemo(() => {\r\n      const countPages = Math.ceil(totalCount / pageSize)\r\n      let pages: number[] = []\r\n      for (let i = 1; i <= countPages; i++) {\r\n         pages.push(i)\r\n      }\r\n      return pages\r\n   }, [pageSize, totalCount])\r\n\r\n   const onClickPageHandler = (e: MouseEvent<HTMLButtonElement>) => setCurrentPageCallback(Number(e.currentTarget.value))\r\n\r\n   return (\r\n         <div className={\"pages\"}>\r\n            { paginatorNumber > 1 && <button onClick={() => {setPaginatorNumber(paginatorNumber - 1)}}>PREV</button> }\r\n            {\r\n               massPages\r\n                  .filter(p => p >= leftPaginatorPageSize && p <= rightPaginatorPageSize)\r\n                  .map(p => <button key={p} className={\"page\"} onClick={onClickPageHandler} value={p}>{p}</button>)\r\n            }\r\n            { paginatorNumber < paginatorCount && <button onClick={() => {setPaginatorNumber(paginatorNumber + 1)}}>NEXT</button> }\r\n         </div>\r\n   );\r\n});\r\n\r\ntype PaginatorType = {\r\n   totalCount: number\r\n   pageSize: number\r\n   paginatorSize?: number\r\n   setCurrentPageCallback: (currentPage: number) => void\r\n}","import React from 'react';\r\nimport {PeopleType} from \"../People/People\";\r\n\r\nexport const PeopleFollowUnfollow: React.FC<PeopleFollowUnfollowType> = React.memo((\r\n   props\r\n) => {\r\n   const {\r\n      people,\r\n      following_ID,\r\n      unfollowCallback,\r\n      followCallback,\r\n   } = props\r\n   const onClickUnfollowHandler = () => unfollowCallback(people.id)\r\n   const onClickFollowHandler = () => followCallback(people.id)\r\n\r\n   return (\r\n      <div className=\"people_followed\">\r\n         {\r\n            people.followed\r\n               ? <button disabled={following_ID.some(id => id === people.id)}\r\n                         className=\"people_followed__btn\"\r\n                         onClick={onClickUnfollowHandler}>Unfollow</button>\r\n               : <button disabled={following_ID.some(id => id === people.id)}\r\n                         className=\"people_followed__btn\"\r\n                         onClick={onClickFollowHandler}>Follow</button>\r\n         }\r\n      </div>\r\n   );\r\n})\r\n\r\ntype PeopleFollowUnfollowType = {\r\n   following_ID: number[]\r\n   followCallback: (people_id: number) => void\r\n   unfollowCallback: (people_id: number) => void\r\n   people: PeopleType\r\n}","import React from \"react\";\r\nimport {People, PeopleType} from \"./People/People\";\r\nimport './peoples.scss'\r\nimport {Paginator} from \"../../Commons/Paginator/Paginator\";\r\nimport {PeopleFollowUnfollow} from \"./PeopleFollowUnfollow/PeopleFollowUnfollow\";\r\n\r\nexport const Peoples: React.FC<PeoplesType> = React.memo((props) => {\r\n   return (\r\n      <div>\r\n         <Paginator {...props}/>\r\n         {props.peoples.map(p => {\r\n               return (\r\n                  <div className=\"people\" key={p.id}>\r\n                     <People id={p.id} name={p.name} photos={p.photos}\r\n                             followed={p.followed} status={p.status}\r\n                             key={`${p.id}-people`}\r\n                     />\r\n                     <PeopleFollowUnfollow {...props}\r\n                                           people={p}\r\n                                           key={`${p.id}-followUnfollow`}\r\n                     />\r\n                  </div>\r\n               )\r\n            }\r\n         )}\r\n      </div>\r\n   )\r\n})\r\n\r\nexport type PeoplesType = {\r\n   peoples: PeopleType[]\r\n   totalCount: number\r\n   pageSize: number\r\n   followCallback: (people_id: number) => void\r\n   unfollowCallback: (people_id: number) => void\r\n   setCurrentPageCallback: (currentPage: number) => void\r\n   following_ID: number[]\r\n}","export default __webpack_public_path__ + \"static/media/preloader.a3a5b2c6.svg\";","import React from 'react';\r\nimport preloader from '../../../assets/preloader/preloader.svg'\r\n\r\nexport const Preloader = () => <img src={preloader} alt=\"preloader\"/>","import {RootState} from \"../redax-store\";\r\nimport {PeopleType} from \"../../Components/Content/Peoples/People/People\";\r\n\r\nexport const getPeoplesFromState = (state: RootState): PeopleType[] | [] => state.peoplesPage.peoples\r\nexport const getTotalCount = (state: RootState): number => state.peoplesPage.totalCount\r\nexport const getCurrentPage = (state: RootState): number => state.peoplesPage.currentPage\r\nexport const getPageSize = (state: RootState): number => state.peoplesPage.countPeoplesOnPage\r\nexport const getIsFetching = (state: RootState): boolean => state.peoplesPage.isFetching\r\nexport const getFlag = (state: RootState): boolean => state.peoplesPage.flag\r\nexport const getIsFollowing = (state: RootState): boolean => state.peoplesPage.isFollowing\r\nexport const getFollowing_ID = (state: RootState): number[] => state.peoplesPage.following_ID","import {RootState} from \"../../../redux/redax-store\";\r\nimport {connect} from \"react-redux\";\r\nimport {Peoples} from \"./Peoples\";\r\nimport React, {ComponentType} from 'react';\r\nimport {Preloader} from \"../../Commons/Preloader/Preloader\";\r\nimport {PeopleType} from \"./People/People\";\r\nimport {follow, getPeoples, unfollow} from \"../../../redux/peoples/peoplesThunk\";\r\nimport {compose} from \"@reduxjs/toolkit\";\r\nimport {withAuthRedirect} from \"../../../hoc/withAuthRedirect\";\r\nimport {\r\n   getCurrentPage, getFlag, getFollowing_ID,\r\n   getIsFetching, getIsFollowing,\r\n   getPageSize,\r\n   getPeoplesFromState,\r\n   getTotalCount\r\n} from \"../../../redux/peoples/peoplesSelectors\";\r\n\r\nclass ContainerPeoples extends React.PureComponent<ContainerPeoplePropsType> {\r\n   componentDidMount = () => {\r\n      this.props.getPeoples(this.props.pageSize, this.props.currentPage)\r\n   }\r\n\r\n   setCurrentPageCallback = (currentPage: number) => this.props.getPeoples(this.props.pageSize, currentPage)\r\n   followCallback = (people_id: number) => this.props.follow(people_id, !this.props.flag)\r\n   unfollowCallback = (people_id: number) => this.props.unfollow(people_id, !this.props.flag)\r\n\r\n   render = () => {\r\n      return (\r\n         <>\r\n            {this.props.isFetching && <Preloader/>}\r\n            <Peoples {...this.props}\r\n                     followCallback={this.followCallback}\r\n                     unfollowCallback={this.unfollowCallback}\r\n                     setCurrentPageCallback={this.setCurrentPageCallback}\r\n            />\r\n         </>\r\n      )\r\n   }\r\n}\r\n\r\nexport type ContainerPeoplePropsType = MapStateToPropsType & MapDispatchToPropsType\r\ntype MapStateToPropsType = {\r\n   peoples: PeopleType[] | []\r\n   totalCount: number\r\n   currentPage: number\r\n   pageSize: number\r\n   isFetching: boolean\r\n   flag: boolean\r\n   isFollowing: boolean\r\n   following_ID: number[]\r\n}\r\ntype MapDispatchToPropsType = {\r\n   follow(people_ID: number, flag: boolean): void\r\n   unfollow(people_ID: number, flag: boolean): void\r\n   getPeoples(countPeoplesOnPage: number, currentPage: number): void\r\n}\r\n\r\nconst mapStateToProps = (state: RootState): MapStateToPropsType => {\r\n   return {\r\n      peoples: getPeoplesFromState(state),\r\n      totalCount: getTotalCount(state),\r\n      currentPage: getCurrentPage(state),\r\n      pageSize: getPageSize(state),\r\n      isFetching: getIsFetching(state),\r\n      flag: getFlag(state),\r\n      isFollowing: getIsFollowing(state),\r\n      following_ID: getFollowing_ID(state),\r\n   }\r\n}\r\n\r\nexport default compose<ComponentType>(\r\n   connect(mapStateToProps, {follow, unfollow, getPeoples}),\r\n   withAuthRedirect,\r\n)(ContainerPeoples)","import {\r\n   followSuccess,\r\n   setCurrentPage,\r\n   setPeoples,\r\n   setTotalCount,\r\n   unfollowSuccess\r\n} from \"./peoplesActions\";\r\nimport {ThunkDispatchType, ThunkType} from \"../redax-store\";\r\nimport {userAPI} from \"../../api/api\";\r\nimport {followUnfollowFlow} from \"../../Components/Commons/Utils/functions-helpers\";\r\n\r\nexport const getPeoples = (countPeoplesOnPage: number, currentPage: number): ThunkType => async (dispatch: ThunkDispatchType) => {\r\n   try {\r\n      let data = await userAPI.getUsers(countPeoplesOnPage, currentPage)\r\n      dispatch(setPeoples(data.items))\r\n      dispatch(setTotalCount(data.totalCount))\r\n      dispatch(setCurrentPage(currentPage))\r\n   } catch (e) {\r\n      console.log(\"peoplesThunk -> getPeoples \", e)\r\n   }\r\n}\r\n\r\nexport const unfollow = (people_ID: number, flag: boolean): ThunkType => async (dispatch: ThunkDispatchType) => {\r\n   await followUnfollowFlow(people_ID, flag, dispatch, userAPI.setUnfollow(people_ID), unfollowSuccess)\r\n}\r\nexport const follow = (people_ID: number, flag: boolean): ThunkType => async (dispatch: ThunkDispatchType) => {\r\n   await followUnfollowFlow(people_ID, flag, dispatch, userAPI.setFollow(people_ID), followSuccess)\r\n}"],"sourceRoot":""}